{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cdnwe\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\[node]ReactStudy\\\\25-nextjs-bigger-project\\\\06-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  _s();\n\n  useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://images.unsplash.com/photo-1612074245862-dc7a57f02e16?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1940&q=80\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MeetupDetails, \"CeygcqajjFExIxFEzW4x/gfWEGQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/cdnwe/OneDrive/바탕 화면/[node]ReactStudy/25-nextjs-bigger-project/06-project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MeetupDetails"],"mappings":";;;;;AAEA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvBF,EAAAA,SAAS;AAET,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,gKADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXQE,a;UACPF,S;;;KADOE,a;;AAuDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n  useRouter();\r\n\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://images.unsplash.com/photo-1612074245862-dc7a57f02e16?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1940&q=80\"\r\n      title=\"First Meetup\"\r\n      address=\"Some Street 5, Some City\"\r\n      description=\"This is a first meetup.\"\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://cdnwellhk:L2uczUlpLFurEkew@cluster0.ubf7fpm.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  // .find()는 모든 meetups에 액세스 할 수 있게 해줍니다.\r\n  // .find({}) 객체를 넣어 필터 기준을 정의할 수도 있습니다.\r\n  // 아래의 의미는 _id :1은 ID만 포함하고 다른 필드 값은 포함하지 않는다는 뜻입니다.\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://images.unsplash.com/photo-1612074245862-dc7a57f02e16?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1940&q=80\",\r\n        id: meetupId,\r\n        title: \"First Meetup\",\r\n        address: \"Some Street 5, Some City\",\r\n        description: \"This is a first meetup.\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}